{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/hakanakin/Desktop/Projects/React Native/Guess-Number/App.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Font from \"expo-font\";\nimport { AppLoading } from \"expo\";\nimport Header from \"./components/Header\";\nimport StartGameScreen from \"./screens/StartGameScreen\";\nimport GameScreen from \"./screens/GameScreen\";\nimport GameOverScreen from \"./screens/GameOverScreen\";\n\nvar fetchFont = function fetchFont() {\n  return Font.loadAsync({\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      userNumber = _useState2[0],\n      setUserNumber = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      guessRounds = _useState4[0],\n      setGuessRounds = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataLoaded = _useState6[0],\n      setDataLoaded = _useState6[1];\n\n  if (!dataLoaded) {\n    return React.createElement(AppLoading, {\n      startAsync: fetchFont,\n      onFinish: function onFinish() {\n        return setDataLoaded(true);\n      },\n      onError: function onError(err) {\n        return console.log(err);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    });\n  }\n\n  var configureNewGameHandler = function configureNewGameHandler() {\n    setGuessRounds(0);\n    setUserNumber(null);\n  };\n\n  var startGameHandler = function startGameHandler(selectedNumber) {\n    setUserNumber(selectedNumber);\n  };\n\n  var gameOverHandler = function gameOverHandler(numOfRounds) {\n    setGuessRounds(numOfRounds);\n  };\n\n  var content = React.createElement(StartGameScreen, {\n    onStartGame: startGameHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  });\n\n  if (userNumber && guessRounds <= 0) {\n    content = React.createElement(GameScreen, {\n      userChoice: userNumber,\n      onGameOver: gameOverHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    });\n  } else if (guessRounds > 0) {\n    content = React.createElement(GameOverScreen, {\n      roundsNumber: guessRounds,\n      userNumber: userNumber,\n      onRestart: configureNewGameHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    title: \"Guess a Number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), content);\n}\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/hakanakin/Desktop/Projects/React Native/Guess-Number/App.js"],"names":["React","useState","Font","AppLoading","Header","StartGameScreen","GameScreen","GameOverScreen","fetchFont","loadAsync","require","App","userNumber","setUserNumber","guessRounds","setGuessRounds","dataLoaded","setDataLoaded","err","console","log","configureNewGameHandler","startGameHandler","selectedNumber","gameOverHandler","numOfRounds","content","styles","screen","StyleSheet","create","flex"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;AAEA,OAAOC,MAAP;AACA,OAAOC,eAAP;AACA,OAAOC,UAAP;AACA,OAAOC,cAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,SAAON,IAAI,CAACO,SAAL,CAAe;AACpB,iBAAaC,OAAO,uCADA;AAEpB,sBAAkBA,OAAO;AAFL,GAAf,CAAP;AAID,CALD;;AAOA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACQV,QAAQ,EADhB;AAAA;AAAA,MACrBW,UADqB;AAAA,MACTC,aADS;;AAAA,mBAEUZ,QAAQ,CAAC,CAAD,CAFlB;AAAA;AAAA,MAErBa,WAFqB;AAAA,MAERC,cAFQ;;AAAA,mBAGQd,QAAQ,CAAC,KAAD,CAHhB;AAAA;AAAA,MAGrBe,UAHqB;AAAA,MAGTC,aAHS;;AAK5B,MAAI,CAACD,UAAL,EAAiB;AACf,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAER,SADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMS,aAAa,CAAC,IAAD,CAAnB;AAAA,OAFZ;AAGE,MAAA,OAAO,EAAE,iBAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAED,MAAMG,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACpCN,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,MAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,cAAc,EAAI;AACzCV,IAAAA,aAAa,CAACU,cAAD,CAAb;AACD,GAFD;;AAIA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,WAAW,EAAI;AACrCV,IAAAA,cAAc,CAACU,WAAD,CAAd;AACD,GAFD;;AAIA,MAAIC,OAAO,GAAG,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAEJ,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd;;AAEA,MAAIV,UAAU,IAAIE,WAAW,IAAI,CAAjC,EAAoC;AAClCY,IAAAA,OAAO,GACL,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAEd,UAAxB;AAAoC,MAAA,UAAU,EAAEY,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJD,MAIO,IAAIV,WAAW,GAAG,CAAlB,EAAqB;AAC1BY,IAAAA,OAAO,GACL,oBAAC,cAAD;AACE,MAAA,YAAY,EAAEZ,WADhB;AAEE,MAAA,UAAU,EAAEF,UAFd;AAGE,MAAA,SAAS,EAAES,uBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGF,OAFH,CADF;AAMD;AAED,IAAMC,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,MAAM,EAAE;AACNG,IAAAA,IAAI,EAAE;AADA;AADuB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport * as Font from \"expo-font\";\nimport { AppLoading } from \"expo\";\n\nimport Header from \"./components/Header\";\nimport StartGameScreen from \"./screens/StartGameScreen\";\nimport GameScreen from \"./screens/GameScreen\";\nimport GameOverScreen from \"./screens/GameOverScreen\";\n\nconst fetchFont = () => {\n  return Font.loadAsync({\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  const [userNumber, setUserNumber] = useState();\n  const [guessRounds, setGuessRounds] = useState(0);\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  if (!dataLoaded) {\n    return (\n      <AppLoading\n        startAsync={fetchFont}\n        onFinish={() => setDataLoaded(true)}\n        onError={err => console.log(err)}\n      />\n    );\n  }\n\n  const configureNewGameHandler = () => {\n    setGuessRounds(0);\n    setUserNumber(null);\n  };\n\n  const startGameHandler = selectedNumber => {\n    setUserNumber(selectedNumber);\n  };\n\n  const gameOverHandler = numOfRounds => {\n    setGuessRounds(numOfRounds);\n  };\n\n  let content = <StartGameScreen onStartGame={startGameHandler} />;\n\n  if (userNumber && guessRounds <= 0) {\n    content = (\n      <GameScreen userChoice={userNumber} onGameOver={gameOverHandler} />\n    );\n  } else if (guessRounds > 0) {\n    content = (\n      <GameOverScreen\n        roundsNumber={guessRounds}\n        userNumber={userNumber}\n        onRestart={configureNewGameHandler}\n      />\n    );\n  }\n\n  return (\n    <View style={styles.screen}>\n      <Header title=\"Guess a Number\" />\n      {content}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1\n  }\n});\n"]},"metadata":{},"sourceType":"module"}