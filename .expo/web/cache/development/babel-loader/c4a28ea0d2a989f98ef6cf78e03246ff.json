{"ast":null,"code":"var _jsxFileName = \"/Users/hakanakin/Desktop/Projects/React Native/Guess-Number/screens/GameOverScreen.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport BodyText from \"../components/BodyText\";\nimport TitleText from \"../components/TitleText\";\nimport Colors from \"../constants/colors\";\nimport MainButton from \"../components/MainButton\";\n\nvar GameOverScreen = function GameOverScreen(props) {\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, React.createElement(TitleText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"The Game is over!\"), React.createElement(View, {\n    style: styles.imageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/success.png\"),\n    style: styles.image,\n    resizeMode: \"cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.resultContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(BodyText, {\n    style: styles.resultText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Your phone needed\", \" \", React.createElement(Text, {\n    style: styles.highlight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, props.roundsNumber), \" rounds to guess the number\", \" \", React.createElement(Text, {\n    style: styles.highlight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, props.userNumber))), React.createElement(MainButton, {\n    onPress: props.onRestart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"NEW GAME\")));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingVertical: 10\n  },\n  imageContainer: {\n    width: Dimensions.get(\"window\").width * 0.7,\n    height: Dimensions.get(\"window\").width * 0.7,\n    borderRadius: Dimensions.get(\"window\").width * 0.7 / 2,\n    borderWidth: 3,\n    borderColor: \"black\",\n    overflow: \"hidden\",\n    marginVertical: Dimensions.get(\"window\").height / 30\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  resultContainer: {\n    marginHorizontal: 30,\n    marginVertical: Dimensions.get(\"window\").height / 60\n  },\n  resultText: {\n    textAlign: \"center\",\n    fontSize: Dimensions.get(\"window\").height < 400 ? 16 : 20\n  },\n  highlight: {\n    color: Colors.primary,\n    fontFamily: \"open-sans-bold\"\n  }\n});\nexport default GameOverScreen;","map":{"version":3,"sources":["/Users/hakanakin/Desktop/Projects/React Native/Guess-Number/screens/GameOverScreen.js"],"names":["React","BodyText","TitleText","Colors","MainButton","GameOverScreen","props","styles","screen","imageContainer","require","image","resultContainer","resultText","highlight","roundsNumber","userNumber","onRestart","StyleSheet","create","flex","justifyContent","alignItems","paddingVertical","width","Dimensions","get","height","borderRadius","borderWidth","borderColor","overflow","marginVertical","marginHorizontal","textAlign","fontSize","color","primary","fontFamily"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAWA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,OAAOC,UAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC9B,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEC,OAAO,yBADjB;AAGE,IAAA,KAAK,EAAEH,MAAM,CAACI,KAHhB;AAIE,IAAA,UAAU,EAAC,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,MAAM,CAACM,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACoB,GADpB,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCR,KAAK,CAACS,YAAtC,CAFF,iCAGmB,GAHnB,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACO,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCR,KAAK,CAACU,UAAtC,CAJF,CADF,CAVF,EAmBE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEV,KAAK,CAACW,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF,CADF,CADF;AAyBD,CA1BD;;AA4BA,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,MAAM,EAAE;AACNY,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,cAAc,EAAE,QAFV;AAGNC,IAAAA,UAAU,EAAE,QAHN;AAINC,IAAAA,eAAe,EAAE;AAJX,GADuB;AAO/Bd,EAAAA,cAAc,EAAE;AACde,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAAiC,GAD1B;AAEdG,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAAiC,GAF3B;AAGdI,IAAAA,YAAY,EAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAAiC,GAAlC,GAAyC,CAHzC;AAIdK,IAAAA,WAAW,EAAE,CAJC;AAKdC,IAAAA,WAAW,EAAE,OALC;AAMdC,IAAAA,QAAQ,EAAE,QANI;AAOdC,IAAAA,cAAc,EAAEP,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC;AAPpC,GAPe;AAgB/BhB,EAAAA,KAAK,EAAE;AACLa,IAAAA,KAAK,EAAE,MADF;AAELG,IAAAA,MAAM,EAAE;AAFH,GAhBwB;AAoB/Bf,EAAAA,eAAe,EAAE;AACfqB,IAAAA,gBAAgB,EAAE,EADH;AAEfD,IAAAA,cAAc,EAAEP,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC;AAFnC,GApBc;AAwB/Bd,EAAAA,UAAU,EAAE;AACVqB,IAAAA,SAAS,EAAE,QADD;AAEVC,IAAAA,QAAQ,EAAEV,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC,GAAlC,GAAwC,EAAxC,GAA6C;AAF7C,GAxBmB;AA4B/Bb,EAAAA,SAAS,EAAE;AACTsB,IAAAA,KAAK,EAAEjC,MAAM,CAACkC,OADL;AAETC,IAAAA,UAAU,EAAE;AAFH;AA5BoB,CAAlB,CAAf;AAkCA,eAAejC,cAAf","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Button,\n  Image,\n  Dimensions,\n  ScrollView\n} from \"react-native\";\n\nimport BodyText from \"../components/BodyText\";\nimport TitleText from \"../components/TitleText\";\nimport Colors from \"../constants/colors\";\nimport MainButton from \"../components/MainButton\";\n\nconst GameOverScreen = props => {\n  return (\n    <ScrollView>\n      <View style={styles.screen}>\n        <TitleText>The Game is over!</TitleText>\n        <View style={styles.imageContainer}>\n          <Image\n            source={require(\"../assets/success.png\")}\n            //source={{uri: 'https://cdn.pixabay.com/photo/2016/05/05/23/52/mountain-summit-1375015_1280.jpg'}}\n            style={styles.image}\n            resizeMode=\"cover\"\n          />\n        </View>\n        <View style={styles.resultContainer}>\n          <BodyText style={styles.resultText}>\n            Your phone needed{\" \"}\n            <Text style={styles.highlight}>{props.roundsNumber}</Text> rounds to\n            guess the number{\" \"}\n            <Text style={styles.highlight}>{props.userNumber}</Text>\n          </BodyText>\n        </View>\n\n        <MainButton onPress={props.onRestart}>NEW GAME</MainButton>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingVertical: 10\n  },\n  imageContainer: {\n    width: Dimensions.get(\"window\").width * 0.7,\n    height: Dimensions.get(\"window\").width * 0.7,\n    borderRadius: (Dimensions.get(\"window\").width * 0.7) / 2,\n    borderWidth: 3,\n    borderColor: \"black\",\n    overflow: \"hidden\",\n    marginVertical: Dimensions.get(\"window\").height / 30\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  resultContainer: {\n    marginHorizontal: 30,\n    marginVertical: Dimensions.get(\"window\").height / 60\n  },\n  resultText: {\n    textAlign: \"center\",\n    fontSize: Dimensions.get(\"window\").height < 400 ? 16 : 20\n  },\n  highlight: {\n    color: Colors.primary,\n    fontFamily: \"open-sans-bold\"\n  }\n});\n\nexport default GameOverScreen;\n"]},"metadata":{},"sourceType":"module"}