{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Users/hakanakin/Desktop/Projects/React Native/Guess-Number/screens/GameScreen.js\",\n    _this = this;\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport NumberContainer from \"../components/NumberContainer\";\nimport MainButton from \"../components/MainButton\";\nimport Card from \"../components/Card\";\nimport BodyText from \"../components/BodyText\";\nimport DefaultSyles from \"../constants/default-styles\";\n\nvar generateRandomBetween = function generateRandomBetween(min, max, exclude) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n};\n\nvar renderListItem = function renderListItem(value, numOfRound) {\n  return React.createElement(View, {\n    key: value,\n    style: styles.listItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }, React.createElement(BodyText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \"#\", numOfRound), React.createElement(BodyText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, value));\n};\n\nvar GameScreen = function GameScreen(props) {\n  var initialGuess = generateRandomBetween(1, 100, props.userChoice);\n\n  var _useState = useState(initialGuess),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pastGuesses = _useState4[0],\n      setPastGuesses = _useState4[1];\n\n  var _useState5 = useState(Dimensions.get(\"window\").width),\n      _useState6 = _slicedToArray(_useState5, 2),\n      availableDeviceWidth = _useState6[0],\n      setAvailableDeviceWidth = _useState6[1];\n\n  var _useState7 = useState(Dimensions.get(\"window\").height),\n      _useState8 = _slicedToArray(_useState7, 2),\n      availableDeviceHeight = _useState8[0],\n      setAvailableDeviceHeight = _useState8[1];\n\n  useEffect(function () {\n    var updateLayout = function updateLayout() {\n      setAvailableDeviceWidth(Dimensions.get(\"window\").width);\n      setAvailableDeviceHeight(Dimensions.get(\"window\").height);\n    };\n\n    Dimensions.addEventListener(\"change\", updateLayout);\n    return function () {\n      Dimensions.removeEventListener(\"change\", updateLayout);\n    };\n  });\n  var currentLow = useRef(1);\n  var currentHigh = useRef(100);\n  var userChoice = props.userChoice,\n      onGameOver = props.onGameOver;\n  useEffect(function () {\n    if (currentGuess === userChoice) {\n      onGameOver(pastGuesses.length);\n    }\n  }, [currentGuess, userChoice, onGameOver]);\n\n  var nextGuessHandleer = function nextGuessHandleer(direction) {\n    if (direction === \"lower\" && currentGuess < props.userChoice || direction === \"greater\" && currentGuess > props.userChoice) {\n      Alert.alert(\"Don't lie!\", \"You know that is wrong...\", [{\n        text: \"Sorry!\",\n        style: \"cancel\"\n      }]);\n      return;\n    }\n\n    if (direction === \"lower\") {\n      currentHigh.current = currentGuess;\n    } else {\n      currentLow.current = currentGuess + 1;\n    }\n\n    var nextNumber = generateRandomBetween(currentLow.current, currentHigh.current, currentGuess);\n    setCurrentGuess(nextNumber);\n    setPastGuesses(function (curPastGuesses) {\n      return [nextNumber].concat(_toConsumableArray(curPastGuesses));\n    });\n  };\n\n  if (availableDeviceHeight < 500) {\n    return React.createElement(View, {\n      style: styles.screen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: DefaultSyles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, \"Opponent's Guess\"), React.createElement(View, {\n      style: styles.controls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, React.createElement(MainButton, {\n      onPress: nextGuessHandleer.bind(_this, \"lower\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, React.createElement(Ionicons, {\n      name: \"md-remove\",\n      size: 24,\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    })), React.createElement(NumberContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, currentGuess), React.createElement(MainButton, {\n      onPress: nextGuessHandleer.bind(_this, \"greater\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, React.createElement(Ionicons, {\n      name: \"md-add\",\n      size: 24,\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }))), React.createElement(View, {\n      style: styles.listContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, React.createElement(ScrollView, {\n      contentContainerStyle: styles.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, pastGuesses.map(function (guess, index) {\n      return renderListItem(guess, pastGuesses.length - index);\n    }))));\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: DefaultSyles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"Opponent's Guess\"), React.createElement(NumberContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, currentGuess), React.createElement(Card, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, React.createElement(MainButton, {\n    onPress: nextGuessHandleer.bind(_this, \"lower\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-remove\",\n    size: 24,\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  })), React.createElement(MainButton, {\n    onPress: nextGuessHandleer.bind(_this, \"greater\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-add\",\n    size: 24,\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.listContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: styles.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, pastGuesses.map(function (guess, index) {\n    return renderListItem(guess, pastGuesses.length - index);\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: Dimensions.get(\"window\").height > 600 ? 20 : 5,\n    width: 400,\n    maxWidth: \"90%\"\n  },\n  controls: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    width: \"80%\"\n  },\n  listContainer: {\n    flex: 1,\n    width: Dimensions.get(\"window\").width > 350 ? \"80%\" : \"90 %\"\n  },\n  list: {\n    flexGrow: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-end\"\n  },\n  listItem: {\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    padding: 15,\n    marginVertical: 10,\n    backgroundColor: \"white\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"60%\"\n  }\n});\nexport default GameScreen;","map":{"version":3,"sources":["/Users/hakanakin/Desktop/Projects/React Native/Guess-Number/screens/GameScreen.js"],"names":["React","useState","useRef","useEffect","Ionicons","NumberContainer","MainButton","Card","BodyText","DefaultSyles","generateRandomBetween","min","max","exclude","Math","ceil","floor","rndNum","random","renderListItem","value","numOfRound","styles","listItem","GameScreen","props","initialGuess","userChoice","currentGuess","setCurrentGuess","pastGuesses","setPastGuesses","Dimensions","get","width","availableDeviceWidth","setAvailableDeviceWidth","height","availableDeviceHeight","setAvailableDeviceHeight","updateLayout","addEventListener","removeEventListener","currentLow","currentHigh","onGameOver","length","nextGuessHandleer","direction","Alert","alert","text","style","current","nextNumber","curPastGuesses","screen","title","controls","bind","listContainer","list","map","guess","index","buttonContainer","StyleSheet","create","flex","padding","alignItems","flexDirection","justifyContent","marginTop","maxWidth","flexGrow","borderColor","borderWidth","marginVertical","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Button,\n  Alert,\n  ScrollView,\n  Dimensions\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport NumberContainer from \"../components/NumberContainer\";\nimport MainButton from \"../components/MainButton\";\nimport Card from \"../components/Card\";\nimport BodyText from \"../components/BodyText\";\nimport DefaultSyles from \"../constants/default-styles\";\n\nconst generateRandomBetween = (min, max, exclude) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  const rndNum = Math.floor(Math.random() * (max - min)) + min;\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n};\n\nconst renderListItem = (value, numOfRound) => (\n  <View key={value} style={styles.listItem}>\n    <BodyText>#{numOfRound}</BodyText>\n    <BodyText>{value}</BodyText>\n  </View>\n);\n\nconst GameScreen = props => {\n  const initialGuess = generateRandomBetween(1, 100, props.userChoice);\n  const [currentGuess, setCurrentGuess] = useState(initialGuess);\n  const [pastGuesses, setPastGuesses] = useState([]);\n  const [availableDeviceWidth, setAvailableDeviceWidth] = useState(\n    Dimensions.get(\"window\").width\n  );\n  const [availableDeviceHeight, setAvailableDeviceHeight] = useState(\n    Dimensions.get(\"window\").height\n  );\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setAvailableDeviceWidth(Dimensions.get(\"window\").width);\n      setAvailableDeviceHeight(Dimensions.get(\"window\").height);\n    };\n\n    Dimensions.addEventListener(\"change\", updateLayout);\n\n    return () => {\n      Dimensions.removeEventListener(\"change\", updateLayout);\n    };\n  });\n\n  const currentLow = useRef(1);\n  const currentHigh = useRef(100);\n\n  const { userChoice, onGameOver } = props;\n\n  useEffect(() => {\n    if (currentGuess === userChoice) {\n      onGameOver(pastGuesses.length);\n    }\n  }, [currentGuess, userChoice, onGameOver]);\n\n  const nextGuessHandleer = direction => {\n    if (\n      (direction === \"lower\" && currentGuess < props.userChoice) ||\n      (direction === \"greater\" && currentGuess > props.userChoice)\n    ) {\n      Alert.alert(\"Don't lie!\", \"You know that is wrong...\", [\n        { text: \"Sorry!\", style: \"cancel\" }\n      ]);\n      return;\n    }\n\n    if (direction === \"lower\") {\n      currentHigh.current = currentGuess;\n    } else {\n      currentLow.current = currentGuess + 1;\n    }\n\n    const nextNumber = generateRandomBetween(\n      currentLow.current,\n      currentHigh.current,\n      currentGuess\n    );\n    setCurrentGuess(nextNumber);\n    //setRounds(curRounds => curRounds + 1);\n    setPastGuesses(curPastGuesses => [nextNumber, ...curPastGuesses]);\n  };\n\n  if (availableDeviceHeight < 500) {\n    return (\n      <View style={styles.screen}>\n        <Text style={DefaultSyles.title}>Opponent's Guess</Text>\n        <View style={styles.controls}>\n          <MainButton onPress={nextGuessHandleer.bind(this, \"lower\")}>\n            <Ionicons name=\"md-remove\" size={24} color=\"white\" />\n          </MainButton>\n          <NumberContainer>{currentGuess}</NumberContainer>\n\n          <MainButton onPress={nextGuessHandleer.bind(this, \"greater\")}>\n            <Ionicons name=\"md-add\" size={24} color=\"white\" />\n          </MainButton>\n        </View>\n        <View style={styles.listContainer}>\n          <ScrollView contentContainerStyle={styles.list}>\n            {pastGuesses.map((guess, index) =>\n              renderListItem(guess, pastGuesses.length - index)\n            )}\n          </ScrollView>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.screen}>\n      <Text style={DefaultSyles.title}>Opponent's Guess</Text>\n      <NumberContainer>{currentGuess}</NumberContainer>\n      <Card style={styles.buttonContainer}>\n        <MainButton onPress={nextGuessHandleer.bind(this, \"lower\")}>\n          <Ionicons name=\"md-remove\" size={24} color=\"white\" />\n        </MainButton>\n        <MainButton onPress={nextGuessHandleer.bind(this, \"greater\")}>\n          <Ionicons name=\"md-add\" size={24} color=\"white\" />\n        </MainButton>\n      </Card>\n      <View style={styles.listContainer}>\n        <ScrollView contentContainerStyle={styles.list}>\n          {pastGuesses.map((guess, index) =>\n            renderListItem(guess, pastGuesses.length - index)\n          )}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: Dimensions.get(\"window\").height > 600 ? 20 : 5,\n    width: 400,\n    maxWidth: \"90%\"\n  },\n  controls: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    width: \"80%\"\n  },\n  listContainer: {\n    flex: 1,\n    width: Dimensions.get(\"window\").width > 350 ? \"80%\" : \"90 %\"\n  },\n  list: {\n    flexGrow: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-end\"\n  },\n  listItem: {\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    padding: 15,\n    marginVertical: 10,\n    backgroundColor: \"white\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"60%\"\n  }\n});\n\nexport default GameScreen;\n"]},"metadata":{},"sourceType":"module"}