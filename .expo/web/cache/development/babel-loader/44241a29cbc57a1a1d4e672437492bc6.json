{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/hakanakin/Desktop/Projects/React Native/Guess-Number/screens/StartGameScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Card from \"../components/Card\";\nimport Colors from \"../constants/colors\";\nimport Input from \"../components/Input\";\nimport NumberContainer from \"../components/NumberContainer\";\nimport BodyText from \"../components/BodyText\";\nimport TitleText from \"../components/TitleText\";\nimport MainButton from \"../components/MainButton\";\n\nvar StartGameScreen = function StartGameScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmed = _useState4[0],\n      setConfirmed = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedNumber = _useState6[0],\n      setSelectedNumber = _useState6[1];\n\n  var _useState7 = useState(Dimensions.get(\"window\").width / 4),\n      _useState8 = _slicedToArray(_useState7, 2),\n      buttonWidth = _useState8[0],\n      setButtonWidth = _useState8[1];\n\n  useEffect(function () {\n    var updateLayout = function updateLayout() {\n      setButtonWidth(Dimensions.get(\"window\").width / 4);\n    };\n\n    Dimensions.addEventListener(\"change\", updateLayout);\n    return function () {\n      Dimensions.removeEventListener(\"change\", updateLayout);\n    };\n  });\n\n  var numberInputHandler = function numberInputHandler(inputText) {\n    setEnteredValue(inputText.replace(/[^0-9]/g, \"\"));\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredValue(\"\");\n    setConfirmed(false);\n  };\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredValue);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert(\"Invalid number!\", \"Number has to be a number between 1 and 99.\", [{\n        text: \"Okay\",\n        style: \"destructive\",\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n\n    setConfirmed(true);\n    setSelectedNumber(chosenNumber);\n    setEnteredValue(\"\");\n    Keyboard.dismiss();\n  };\n\n  var confirmedOutput;\n\n  if (confirmed) {\n    confirmedOutput = React.createElement(Card, {\n      style: styles.summaryContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, React.createElement(BodyText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"You selected\"), React.createElement(NumberContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, selectedNumber), React.createElement(MainButton, {\n      onPress: function onPress() {\n        return props.onStartGame(selectedNumber);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"START GAME\"));\n  }\n\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"position\",\n    keyboardVerticalOffset: 60,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, React.createElement(TitleText, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Start a New Game!\"), React.createElement(Card, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(BodyText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Select a Number\"), React.createElement(Input, {\n    style: styles.input,\n    blurOnSubmit: true,\n    autoCapitalize: \"none\",\n    autoCorrrect: false,\n    keyboardType: \"number-pad\",\n    maxLength: 2,\n    onChangeText: numberInputHandler,\n    value: enteredValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      width: buttonWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Reset\",\n    onPress: resetInputHandler,\n    color: Colors.accent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  })), React.createElement(View, {\n    style: {\n      width: buttonWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: confirmInputHandler,\n    color: Colors.primary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  })))), confirmedOutput))));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10,\n    fontFamily: \"open-sans-bold\"\n  },\n  inputContainer: {\n    width: \"80%\",\n    maxWidth: \"95%\",\n    minWidth: 300,\n    maxWidth: \"80%\",\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 15\n  },\n  input: {\n    width: 50,\n    textAlign: \"center\"\n  },\n  summaryContainer: {\n    marginTop: 20,\n    alignItems: \"center\"\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"sources":["/Users/hakanakin/Desktop/Projects/React Native/Guess-Number/screens/StartGameScreen.js"],"names":["React","useState","useEffect","Card","Colors","Input","NumberContainer","BodyText","TitleText","MainButton","StartGameScreen","props","enteredValue","setEnteredValue","confirmed","setConfirmed","selectedNumber","setSelectedNumber","Dimensions","get","width","buttonWidth","setButtonWidth","updateLayout","addEventListener","removeEventListener","numberInputHandler","inputText","replace","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","Keyboard","dismiss","confirmedOutput","styles","summaryContainer","onStartGame","screen","title","inputContainer","input","buttonContainer","accent","primary","StyleSheet","create","flex","padding","alignItems","fontSize","marginVertical","fontFamily","maxWidth","minWidth","flexDirection","justifyContent","paddingHorizontal","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Button,\n  TouchableWithoutFeedback,\n  Keyboard,\n  Alert,\n  Dimensions,\n  ScrollView,\n  KeyboardAvoidingView\n} from \"react-native\";\n\nimport Card from \"../components/Card\";\nimport Colors from \"../constants/colors\";\nimport Input from \"../components/Input\";\nimport NumberContainer from \"../components/NumberContainer\";\nimport BodyText from \"../components/BodyText\";\nimport TitleText from \"../components/TitleText\";\nimport MainButton from \"../components/MainButton\";\n\nconst StartGameScreen = props => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [confirmed, setConfirmed] = useState(false);\n  const [selectedNumber, setSelectedNumber] = useState();\n  const [buttonWidth, setButtonWidth] = useState(\n    Dimensions.get(\"window\").width / 4\n  );\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setButtonWidth(Dimensions.get(\"window\").width / 4);\n    };\n\n    Dimensions.addEventListener(\"change\", updateLayout);\n\n    return () => {\n      Dimensions.removeEventListener(\"change\", updateLayout);\n    };\n  });\n\n  const numberInputHandler = inputText => {\n    setEnteredValue(inputText.replace(/[^0-9]/g, \"\"));\n  };\n\n  const resetInputHandler = () => {\n    setEnteredValue(\"\");\n    setConfirmed(false);\n  };\n\n  const confirmInputHandler = () => {\n    const chosenNumber = parseInt(enteredValue);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert(\n        \"Invalid number!\",\n        \"Number has to be a number between 1 and 99.\",\n        [{ text: \"Okay\", style: \"destructive\", onPress: resetInputHandler }]\n      );\n      return;\n    }\n\n    setConfirmed(true);\n    setSelectedNumber(chosenNumber);\n    setEnteredValue(\"\");\n    Keyboard.dismiss();\n  };\n\n  let confirmedOutput;\n\n  if (confirmed) {\n    confirmedOutput = (\n      <Card style={styles.summaryContainer}>\n        <BodyText>You selected</BodyText>\n        <NumberContainer>{selectedNumber}</NumberContainer>\n        <MainButton onPress={() => props.onStartGame(selectedNumber)}>\n          START GAME\n        </MainButton>\n      </Card>\n    );\n  }\n\n  return (\n    <ScrollView>\n      <KeyboardAvoidingView behavior=\"position\" keyboardVerticalOffset={60}>\n        <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n          <View style={styles.screen}>\n            <TitleText style={styles.title}>Start a New Game!</TitleText>\n            <Card style={styles.inputContainer}>\n              <BodyText>Select a Number</BodyText>\n              <Input\n                style={styles.input}\n                blurOnSubmit\n                autoCapitalize=\"none\"\n                autoCorrrect={false}\n                keyboardType=\"number-pad\"\n                maxLength={2}\n                onChangeText={numberInputHandler}\n                value={enteredValue}\n              />\n              <View style={styles.buttonContainer}>\n                <View style={{ width: buttonWidth }}>\n                  <Button\n                    title=\"Reset\"\n                    onPress={resetInputHandler}\n                    color={Colors.accent}\n                  />\n                </View>\n                <View style={{ width: buttonWidth }}>\n                  <Button\n                    title=\"Confirm\"\n                    onPress={confirmInputHandler}\n                    color={Colors.primary}\n                  />\n                </View>\n              </View>\n            </Card>\n            {confirmedOutput}\n          </View>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10,\n    fontFamily: \"open-sans-bold\"\n  },\n  inputContainer: {\n    width: \"80%\",\n    maxWidth: \"95%\",\n    minWidth: 300,\n    maxWidth: \"80%\",\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 15\n  },\n  //button: {\n  //  width: Dimensions.get(\"window\").width / 4\n  //},\n  input: {\n    width: 50,\n    textAlign: \"center\"\n  },\n  summaryContainer: {\n    marginTop: 20,\n    alignItems: \"center\"\n  }\n});\n\nexport default StartGameScreen;\n"]},"metadata":{},"sourceType":"module"}